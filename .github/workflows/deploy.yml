name: Deploy Vulnerable Application                                  # workflow name

on:
  push:
    branches:
      - master
jobs:
  security_secret:
    name: security_secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: gitleaks-action
        uses: zricethezav/gitleaks-action@master
        #continue-on-error: true 
        
  SonarCloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: . 
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY}}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION}}  
            -Dsonar.source=. 
            -Dsonar.sourceEncoding=UTF-8 
            
  SCA:
    runs-on: ubuntu-latest
    name: Dependency-Checker
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install safety
      - name: Scan using safety
        continue-on-error: true
        run: |
          safety check --full-report
          safety check --json
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: safety
          path: output.json
            
  snyk-code:
    name: security snyk code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run npm install
        run: npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            -d
            --sarif
            --severity-threshold=high
            --file=package.json
            --sarif-file-output=snyk-code.sarif
      - name: Upload SARIF file
        #if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif  
          
  snyk-container:
    name: Security Snyk Container
    runs-on: ubuntu-latest
    steps:
      ## Checkout is required since Snyk needs the Dockerfile for the Sarif report
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Docker Build
        run: |
          docker build -t image-snyk:${{ github.sha }} . 
      - name: Snyk
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: image-snyk:${{ github.sha }}
          args: >
            --file=Dockerfile
            --severity-threshold=high
      - name: Upload SARIF file
        #if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif          
  
  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    needs: [security_secret,SonarCloud,snyk-code,snyk-container,SCA]    
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "app-vulnerable-ferchosur" #Must be unique in Heroku
          heroku_email: "ferchosur@gmail.com"
          usedocker: true
